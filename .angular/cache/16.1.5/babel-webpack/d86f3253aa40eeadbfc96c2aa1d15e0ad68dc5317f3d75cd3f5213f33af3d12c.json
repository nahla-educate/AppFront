{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/auth';\n  }\n  register(registerData) {\n    const registerUrl = `${this.apiUrl}/register`;\n    return this.http.post(registerUrl, registerData);\n  }\n  loginn(loginPayload) {\n    return this.http.post(this.url + 'login', loginPayload).pipe(map(data => {\n      this.localStorageService.store('authenticationToken', data.authenticationToken);\n      this.localStorageService.store('user', data.user);\n      console.log(data.user);\n      return true;\n    }));\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LoginService","constructor","http","apiUrl","register","registerData","registerUrl","post","loginn","loginPayload","url","pipe","map","data","localStorageService","store","authenticationToken","user","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hp\\coChat\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface RegisterData {\n  userName: string;\n  userMail: string;\n  userPassword: string;\n}\n\nexport interface AuthData {\n  userMail: string;\n  userPassword: string;\n}\n\nexport interface AuthenticationResponse {\n  token: string;\n  message: string;\n  // Other properties if needed\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private apiUrl = 'http://localhost:8080/api/auth';\n\n  constructor(private http: HttpClient) {}\n\n  register(registerData: RegisterData): Observable<AuthenticationResponse> {\n    const registerUrl = `${this.apiUrl}/register`;\n    return this.http.post<AuthenticationResponse>(registerUrl, registerData);\n  }\n\n  loginn(loginPayload: AuthData) :Observable<boolean>{\n    return  this.http.post<JwtAutResponse>(this.url + 'login', loginPayload).pipe(map( data => {\n      this.localStorageService.store('authenticationToken', data.authenticationToken);\n      this.localStorageService.store('user', data.user);\n      console.log(data.user);   \n          return true;\n      }));\n    }\n}\n"],"mappings":";;AAwBA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAEvCC,QAAQA,CAACC,YAA0B;IACjC,MAAMC,WAAW,GAAG,GAAG,IAAI,CAACH,MAAM,WAAW;IAC7C,OAAO,IAAI,CAACD,IAAI,CAACK,IAAI,CAAyBD,WAAW,EAAED,YAAY,CAAC;EAC1E;EAEAG,MAAMA,CAACC,YAAsB;IAC3B,OAAQ,IAAI,CAACP,IAAI,CAACK,IAAI,CAAiB,IAAI,CAACG,GAAG,GAAG,OAAO,EAAED,YAAY,CAAC,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAG;MACxF,IAAI,CAACC,mBAAmB,CAACC,KAAK,CAAC,qBAAqB,EAAEF,IAAI,CAACG,mBAAmB,CAAC;MAC/E,IAAI,CAACF,mBAAmB,CAACC,KAAK,CAAC,MAAM,EAAEF,IAAI,CAACI,IAAI,CAAC;MACjDC,OAAO,CAACC,GAAG,CAACN,IAAI,CAACI,IAAI,CAAC;MAClB,OAAO,IAAI;IACf,CAAC,CAAC,CAAC;EACL;;AAjBSjB,YAAY,C;mBAAZA,YAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZvB,YAAY,C;SAAZA,YAAY;EAAAwB,OAAA,EAAZxB,YAAY,CAAAyB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}