{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, authService, service, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.service = service;\n    this.router = router;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n    this.userMail = \"\";\n    this.userPassword = \"\";\n    this.siteKey = \"6LfltwkbAAAAAEG_xuXSPuAtxgxxvKi_jFxaNcjN\";\n    this.localpattern = \"[^[a-zA-Z0-9]{6,16}$]\";\n    this.isSubmitted = false;\n    this.loginForm = new FormGroup({\n      userMail: new FormControl('', [Validators.required, Validators.email]),\n      userPassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(64)])\n    });\n    this.loginPayload = {\n      userMail: '',\n      userPassword: ''\n    };\n  }\n  ngOnInit() {}\n  get mail() {\n    return this.loginForm.get('userMail');\n  }\n  get password() {\n    return this.loginForm.get('userPassword');\n  }\n  onSubmit() {\n    this.loginPayload.userMail = this.mail?.value;\n    this.loginPayload.userPassword = this.password?.value;\n    if (this.loginForm.invalid) {\n      alert('Votre formulaire est invalide.');\n    } else {\n      this.authService.login(this.loginPayload).subscribe(data => {\n        if (data) {\n          console.log(\"login success\");\n          this.router.navigateByUrl(`/`);\n        } else {\n          console.log(\"login failed\");\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[\"novalidate\", \"\", 1, \"form-signin\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"inputEmail\", 1, \"sr-only\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Entrez votre adresse email\", \"required\", \"\", \"autofocus\", \"\", \"email\", \"\", 1, \"form-control\", 3, \"formControlName\"], [\"for\", \"inputPassword\", 1, \"sr-only\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Entre votre mot de passe\", \"required\", \"\", \"autofocus\", \"\", \"minlength\", \"8\", \"maxlength\", \"64\", \"pattern\", \"^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$\", 1, \"form-control\", 3, \"formControlName\"], [\"type\", \"submit\"], [1, \"forgot-password\"], [\"routerLink\", \"/\"], [\"routerLink\", \"/register\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"label\", 2)(3, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵelement(5, \"label\", 4)(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"Se Connecter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"a\", 8);\n      i0.ɵɵtext(11, \"mot de passe oubli\\u00E9 ?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \"Vous n'avez pas de compte ? \");\n      i0.ɵɵelementStart(14, \"a\", 9);\n      i0.ɵɵtext(15, \"s'inscrire\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControlName\", \"email\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControlName\", \"password\");\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.PatternValidator, i1.EmailValidator],\n  styles: [\"#forget[_ngcontent-%COMP%]{\\n    min-width: 100px;\\n   \\n    text-decoration: none;\\n    cursor: pointer;\\n    margin-left: 10%;\\n}\\n\\n#sign[_ngcontent-%COMP%]{\\n    min-width: 100px;\\n    margin-left: auto;\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]{\\n    width: 35%;\\n    margin-top: 20px;\\n    border-radius: 15px;\\n    margin-left: 10%;\\n    background-color: rgb(52, 147, 137);\\n    color: #ffffff;\\n    border: none;\\n}\\n\\n.btn-danger[_ngcontent-%COMP%]{\\n    width: 35%;\\n    margin-top: 20px;\\n    border-radius: 15px;\\n    margin-left: 10%;\\n    color: #ffffff;\\n    background-color: rgb(192, 38, 38);\\n    border: none;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCOztJQUVoQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsbUNBQW1DO0lBQ25DLGNBQWM7SUFDZCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxrQ0FBa0M7SUFDbEMsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIiNmb3JnZXR7XHJcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xyXG4gICBcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbn1cclxuXHJcbiNzaWdue1xyXG4gICAgbWluLXdpZHRoOiAxMDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnl7XHJcbiAgICB3aWR0aDogMzUlO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUyLCAxNDcsIDEzNyk7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmJ0bi1kYW5nZXJ7XHJcbiAgICB3aWR0aDogMzUlO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTkyLCAzOCwgMzgpO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","formBuilder","authService","service","router","type","isText","eyeIcon","userMail","userPassword","siteKey","localpattern","isSubmitted","loginForm","required","email","minLength","maxLength","loginPayload","ngOnInit","mail","get","password","onSubmit","value","invalid","alert","login","subscribe","data","console","log","navigateByUrl","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","LoginService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\hp\\coChat\\src\\app\\components\\login\\login.component.ts","C:\\Users\\hp\\coChat\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthData, AuthenticationResponse, LoginService, RegisterData } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon:string = \"fa-eye-slash\";\n\n  userMail: string=\"\";\n  userPassword: string=\"\";\n\n  /////\n  loginForm: FormGroup;\n  loginPayload: AuthData;\n  siteKey: string = \"6LfltwkbAAAAAEG_xuXSPuAtxgxxvKi_jFxaNcjN\";\n \n  localpattern = \"[^[a-zA-Z0-9]{6,16}$]\";\n  \n  isSubmitted = false;\n\n  constructor(private formBuilder: FormBuilder, private authService: LoginService, private service: LoginService,private router:Router) {\n\n    this.loginForm = new FormGroup({\n      userMail: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      userPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(64),   \n      ])\n    });\n\n    this.loginPayload = {\n      userMail: '',\n      userPassword: ''\n    };\n  }\n\n  ngOnInit(): void { }\n  \n  get mail() { return this.loginForm.get('userMail') }\n  get password() { return this.loginForm.get('userPassword') }\n\n  onSubmit() {\n    this.loginPayload.userMail = this.mail?.value;\n    this.loginPayload.userPassword = this.password?.value;\n\n    if (this.loginForm.invalid) {\n      alert('Votre formulaire est invalide.');\n    } else {\n      this.authService.login(this.loginPayload).subscribe(data => {\n        if (data) {\n          console.log(\"login success\");\n          this.router.navigateByUrl(`/`);\n        } else {\n          console.log(\"login failed\");\n        }\n      });\n    }\n  }\n\n  // ... Rest of the code (hideShowPass and login methods) ...\n}\n","<!--<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form #loginForm=\"ngForm\">\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input type=\"email\" [(ngModel)]=\"userMail\" [ngModelOptions]=\"{standalone: true}\" aria-describedby=\"emailHelp\" class=\"form-control\" placeholder=\"Email\">\n                                </div>\n                            </div>\n\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <i class=\"fa fa-lock p-2\"></i>\n                                    <input [type]=\"type\" type=\"password\" [(ngModel)]=\"userPassword\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa fa-eye-slash\"></span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-inline fr mt-4 w-100\">\n                                <a href=\"\" class=\"font-weight-bold\" id=\"forget\">Forget Password?</a>\n                            </div>\n\n                            <button type=\"submit\" (click)=\"login(loginForm)\" class=\"btn btn-primary btn-block mt-5\">\n                                <span class=\"fa fa-lock\"></span> Login\n                              </button>\n                               <div class=\"text-center pt-4 text-muted\">Don't have account ? <a routerLink=\"/register\" id=\"sign\">Sign Up</a></div>\n                        </form>\n                    </div>\n\n                  \n                </div>\n            </div>\n        </div>\n    </div>\n</div>-->\n<!--yes-->\n<form class=\"form-signin\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" novalidate >\n                              \n    <div class=\"form-group\"  >\n\n      <label for=\"inputEmail\" class=\"sr-only\"></label>\n      <input type=\"email\" id=\"inputEmail\" [formControlName]=\"'email'\" class=\"form-control\" placeholder=\"Entrez votre adresse email\" required=\"\" autofocus=\"\" email>\n      \n   \n\n    </div>\n    <div class=\"form-group\">\n      <label for=\"inputPassword\" class=\"sr-only\"></label>\n      <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\"\n       class=\"form-control\" placeholder=\"Entre votre mot de passe\" required=\"\" autofocus=\"\" minlength=\"8\" maxlength=\"64\" pattern=\"^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$\">\n\n      \n   </div>\n    <button type=\"submit\">Se Connecter</button>\n    <div class=\"forgot-password\">\n        <a routerLink=\"/\">mot de passe oublié ?</a>\n    </div>\n\n    <p>Vous n'avez pas de compte ? <a routerLink=\"/register\">s'inscrire</a></p>\n<br><br>\n   \n\n      </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}