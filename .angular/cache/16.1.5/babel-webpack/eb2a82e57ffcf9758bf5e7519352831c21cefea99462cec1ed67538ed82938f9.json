{"ast":null,"code":"import { WebSocketAPI } from './services/WebSocketAPI';\nimport * as i0 from \"@angular/core\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-register\", 1);\n    i0.ɵɵlistener(\"userSet\", function AppComponent_div_0_Template_app_register_userSet_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.setUser($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_div_1_li_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2, \"From:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"To:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8, \"Content:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r5.sender, \" | \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r5.receiver, \" | \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r5.content, \" \");\n  }\n}\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"form\", 5)(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"WebSocket connection:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_1_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.connect());\n    });\n    i0.ɵɵtext(9, \"Connect\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_1_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.disconnect());\n    });\n    i0.ɵɵtext(11, \"Disconnect\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(12, \"div\", 4)(13, \"form\", 5)(14, \"div\", 6)(15, \"label\", 9);\n    i0.ɵɵtext(16, \"What is your name?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_1_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_1_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.sendMessage());\n    });\n    i0.ɵɵtext(20, \"Send\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"div\", 3)(22, \"div\", 11)(23, \"h2\");\n    i0.ɵɵtext(24, \"Messages:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ul\");\n    i0.ɵɵtemplate(26, AppComponent_div_1_li_26_Template, 10, 3, \"li\", 12);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.name);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'coChat';\n    this.name = '';\n    this.messages = [];\n  }\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n  }\n\n  connect() {\n    this.webSocketAPI._connect();\n  }\n  disconnect() {\n    this.webSocketAPI._disconnect();\n  }\n  // Method to set the user's name during signup\n  setUser(name) {\n    this.name = name;\n  }\n  sendMessage() {\n    this.webSocketAPI._send(this.name);\n    // Add the sent message to the messages list\n    this.messages.push({\n      sender: this.name,\n      receiver: 'Server',\n      content: this.name\n    });\n  }\n  handleMessage(message) {\n    console.log(\"Message Received from Server :: \", message);\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({\n          sender: parsedMessage.sender,\n          receiver: this.name,\n          content: parsedMessage.content\n        });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"userSet\"], [\"id\", \"main-content\", 1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-inline\"], [1, \"form-group\"], [\"for\", \"connect\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-12\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, AppComponent_div_1_Template, 27, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["WebSocketAPI","i0","ɵɵelementStart","ɵɵlistener","AppComponent_div_0_Template_app_register_userSet_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","setUser","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","message_r5","sender","receiver","content","AppComponent_div_1_Template_button_click_8_listener","_r7","ctx_r6","connect","AppComponent_div_1_Template_button_click_10_listener","ctx_r8","disconnect","AppComponent_div_1_Template_input_ngModelChange_17_listener","ctx_r9","name","ɵɵelement","AppComponent_div_1_Template_button_click_19_listener","ctx_r10","sendMessage","ɵɵtemplate","AppComponent_div_1_li_26_Template","ɵɵproperty","ctx_r1","messages","AppComponent","constructor","title","ngOnInit","webSocketAPI","_connect","_disconnect","_send","push","handleMessage","message","console","log","parsedMessage","JSON","parse","error","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","AppComponent_div_1_Template"],"sources":["C:\\Users\\hp\\coChat\\src\\app\\app.component.ts","C:\\Users\\hp\\coChat\\src\\app\\app.component.html"],"sourcesContent":["/*import { Component } from '@angular/core';\nimport { WebSocketAPI } from './services/WebSocketAPI';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'coChat';\n  \n  webSocketAPI!: WebSocketAPI;\n  greeting: any;\n  name!: string ;\n  ngOnInit() {\n  //  this.webSocketAPI = new WebSocketAPI(new AppComponent());\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n\n  }\n  connect(){\n    this.webSocketAPI._connect();\n  }\n\n  disconnect(){\n    this.webSocketAPI._disconnect();\n  }\n\n  sendMessage(){\n    this.webSocketAPI._send(this.name);\n  }\n\n  handleMessage(message: any){\n    this.greeting = message;\n  }\n}\n*/\nimport { Component } from '@angular/core';\nimport { WebSocketAPI } from './services/WebSocketAPI';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'coChat';\n  \n  webSocketAPI!: WebSocketAPI;\n  greeting: any;\n  name: string = '';\n  messages: { sender: string, receiver: string, content: string }[] = [];\n\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n  }\n\n  connect(){\n    this.webSocketAPI._connect();\n  }\n\n  disconnect(){\n    this.webSocketAPI._disconnect();\n  }\n // Method to set the user's name during signup\n setUser(name: string) {\n  this.name = name;\n}\n  sendMessage(){\n    this.webSocketAPI._send(this.name);\n    // Add the sent message to the messages list\n    this.messages.push({ sender: this.name, receiver: 'Server', content: this.name });\n  }\n\n  handleMessage(message: any){\n    console.log(\"Message Received from Server :: \", message);\n\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({ sender: parsedMessage.sender, receiver: this.name, content: parsedMessage.content });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\n","<div *ngIf=\"!name\">\r\n    <app-register (userSet)=\"setUser($event)\"></app-register>\r\n  </div>\r\n  \r\n  <div *ngIf=\"name\">\r\n    <div id=\"main-content\" class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"connect\">WebSocket connection:</label>\r\n              <button (click)=\"connect()\" class=\"btn btn-default\" type=\"button\">Connect</button>\r\n              <button (click)=\"disconnect()\" class=\"btn btn-default\" type=\"button\">Disconnect</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">What is your name?</label>\r\n              <input type=\"text\" [(ngModel)]=\"name\" class=\"form-control\" name=\"name\"> <br>\r\n            </div>\r\n            <button (click)=\"sendMessage()\" class=\"btn btn-default\" type=\"button\">Send</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <h2>Messages:</h2>\r\n          <ul>\r\n            <li *ngFor=\"let message of messages\">\r\n              <strong>From:</strong> {{ message.sender }} |\r\n              <strong>To:</strong> {{ message.receiver }} |\r\n              <strong>Content:</strong> {{ message.content }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}