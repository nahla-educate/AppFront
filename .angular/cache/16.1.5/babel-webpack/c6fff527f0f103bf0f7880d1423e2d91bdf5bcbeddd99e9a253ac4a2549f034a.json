{"ast":null,"code":"import { WebSocketAPI } from './services/WebSocketAPI';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction AppComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.userMail);\n  }\n}\nfunction AppComponent_div_12_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r6);\n  }\n}\nfunction AppComponent_div_12_div_32_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r8.sender);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\": \", message_r8.content, \" \");\n  }\n}\nfunction AppComponent_div_12_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Chat Messages:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AppComponent_div_12_div_32_li_4_Template, 4, 2, \"li\", 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.messages);\n  }\n}\nfunction AppComponent_div_12_div_35_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_div_35_li_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const user_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r11.sendInvitationn(user_r10));\n    });\n    i0.ɵɵtext(3, \"Invite\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r10.userName, \" \");\n  }\n}\nfunction AppComponent_div_12_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Search Results:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AppComponent_div_12_div_35_li_4_Template, 4, 1, \"li\", 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.searchResults);\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"form\", 5)(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"WebSocket connection:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.connect());\n    });\n    i0.ɵɵtext(9, \"Connect\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.disconnect());\n    });\n    i0.ɵɵtext(11, \"Disconnect\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(12, \"div\", 4)(13, \"form\", 5)(14, \"div\", 6)(15, \"label\", 9);\n    i0.ɵɵtext(16, \"Select recipient:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"select\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_12_Template_select_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.selectedRecipient = $event);\n    });\n    i0.ɵɵtemplate(18, AppComponent_div_12_option_18_Template, 2, 2, \"option\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 12);\n    i0.ɵɵtext(21, \"Enter your message:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_12_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.messageContent = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.sendInvitation());\n    });\n    i0.ɵɵtext(25, \"Send Invitation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.sendMessage());\n    });\n    i0.ɵɵtext(27, \"Send Message\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\")(29, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_12_Template_input_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.searchQuery = $event);\n    })(\"keyup.enter\", function AppComponent_div_12_Template_input_keyup_enter_29_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.searchUsers());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.searchUsers());\n    });\n    i0.ɵɵtext(31, \"Search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(32, AppComponent_div_12_div_32_Template, 5, 1, \"div\", 1);\n    i0.ɵɵelementStart(33, \"p\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(35, AppComponent_div_12_div_35_Template, 5, 1, \"div\", 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedRecipient);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.users);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.messageContent);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.searchQuery);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.messages.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.greeting, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.searchResults.length > 0);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'coChat';\n    this.userList = [];\n    this.selectedRecipient = null;\n    this.users = ['User1', 'User2', 'User3']; // Replace this with your list of users\n    this.name = '';\n    this.messageContent = '';\n    this.messages = [];\n    this.searchQuery = '';\n    this.searchResults = [];\n  }\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n    this.fetchUserList();\n  }\n  fetchUserList() {\n    this.http.get('http://localhost:8080/api/auth/list').subscribe(response => {\n      this.userList = response;\n    }, error => {\n      console.error('Error fetching user list:', error);\n    });\n  }\n  connect() {\n    this.webSocketAPI._connect();\n  }\n  disconnect() {\n    this.webSocketAPI._disconnect();\n  }\n  // Method to set the user's name during signup\n  setUser(name) {\n    this.name = name;\n  }\n  /* sendMessage() {\n     if (this.messageContent.trim() === '' || this.selectedRecipient.trim() === '') {\n       return; // Don't send empty messages or if the recipient is not selected\n     }\n         this.webSocketAPI._send(JSON.stringify({\n       sender: this.name,\n       recipient: this.selectedRecipient,\n       content: this.messageContent\n     }));\n         // Add the sent message to the messages list\n     this.messages.push({ sender: this.name, receiver: this.selectedRecipient, content: this.messageContent });\n     this.messageContent = ''; // Clear the message input box after sending\n   }\n       sendInvitation() {\n     if (this.selectedRecipient.trim() === '') {\n       return; // Don't send invitations if the recipient is not selected\n     }\n         this.webSocketAPI._send(JSON.stringify({\n       sender: this.name,\n       recipient: this.selectedRecipient,\n       content: \"Invitation from \" + this.name // Customize the invitation content as needed\n     }));\n   }\n  */\n  sendMessage() {\n    /* if (!this.selectedRecipient || !this.messageContent.trim()) {\n       return; // Don't send empty messages or if the recipient is not selected\n     }\n             this.webSocketAPI._send(JSON.stringify({\n       sender: this.name,\n       recipient: this.selectedRecipient.userName,\n       content: this.messageContent\n     }));\n             // Add the sent message to the messages list\n     this.messages.push({ sender: this.name, receiver: this.selectedRecipient.userName, content: this.messageContent });\n     this.messageContent = ''; // Clear the message input box after sending\n    */\n    if (!this.selectedRecipient || !this.messageContent.trim()) {\n      return; // Don't send empty messages or if the recipient is not selected\n    }\n\n    if (this.selectedRecipient.userName === this.name) {\n      // Send a greeting message to oneself\n      this.webSocketAPI._sendHelloMessage(this.name, this.messageContent);\n    } else {\n      // Send a chat message to the selected recipient\n      this.webSocketAPI._send(JSON.stringify({\n        sender: this.name,\n        recipient: this.selectedRecipient.userName,\n        content: this.messageContent,\n        type: \"chat\"\n      }));\n    } // Add the sent message to the messages list\n    this.messages.push({\n      sender: this.name,\n      receiver: this.selectedRecipient.userName,\n      content: this.messageContent\n    });\n    this.messageContent = ''; // Clear the message input box after sending\n  }\n\n  sendInvitation() {\n    if (!this.selectedRecipient) {\n      return; // Don't send invitations if the recipient is not selected\n    }\n\n    this.webSocketAPI._sendInvitation(\"Invitation from \" + this.name);\n    /*if (!this.selectedRecipient) {\n      return; // Don't send invitations if the recipient is not selected\n    }\n    \n           this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient.userName,\n      content: \"Invitation from \" + this.name // Customize the invitation content as needed\n    }));*/\n  }\n\n  selectUser(user) {\n    // Set the selected recipient when a user is clicked from the search results\n    this.selectedRecipient = user;\n  }\n  searchUsers() {\n    if (!this.searchQuery) {\n      // Empty search query, clear the search results\n      this.searchResults = [];\n      return;\n    }\n    // Call the backend API to retrieve the search results\n    this.http.get(`http://localhost:8080/api/auth/users?userName=${this.searchQuery}`).subscribe(response => {\n      this.searchResults = response;\n      console.log('search results', response);\n    }, error => {\n      console.error('Error fetching search results:', error);\n    });\n  }\n  sendInvitationn(user) {\n    if (!user || !user.userName) {\n      return; // Invalid user, handle error if needed\n    }\n\n    console.log(\"Sending invitation to user:\", user.userName);\n    // Call the WebSocketAPI to send the invitation\n    this.webSocketAPI._sendInvitation(JSON.stringify({\n      sender: this.name\n    }));\n    // Handle the invitation logic here, e.g., display a notification or confirmation message\n    // You can customize this according to your requirements\n    alert(\"Invitation sent to \" + user.userName);\n  }\n  handleMessage(message) {\n    console.log(\"Message Received from Server :: \", message);\n    this.greeting = message;\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({\n          sender: parsedMessage.sender,\n          receiver: parsedMessage.recipient,\n          content: parsedMessage.content\n        });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"id\", \"main-content\", 1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-inline\"], [1, \"form-group\"], [\"for\", \"connect\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"for\", \"recipient\"], [\"name\", \"recipient\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"message\"], [\"type\", \"text\", \"name\", \"message\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Search for users\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"], [3, \"value\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-register\");\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"User List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"User ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"User Mail\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, AppComponent_tr_11_Template, 7, 3, \"tr\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AppComponent_div_12_Template, 36, 7, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["WebSocketAPI","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","user_r2","userId","userName","userMail","ɵɵproperty","user_r6","message_r8","sender","ɵɵtextInterpolate1","content","ɵɵtemplate","AppComponent_div_12_div_32_li_4_Template","ctx_r4","messages","ɵɵlistener","AppComponent_div_12_div_35_li_4_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r12","user_r10","$implicit","ctx_r11","ɵɵnextContext","ɵɵresetView","sendInvitationn","AppComponent_div_12_div_35_li_4_Template","ctx_r5","searchResults","AppComponent_div_12_Template_button_click_8_listener","_r14","ctx_r13","connect","AppComponent_div_12_Template_button_click_10_listener","ctx_r15","disconnect","AppComponent_div_12_Template_select_ngModelChange_17_listener","$event","ctx_r16","selectedRecipient","AppComponent_div_12_option_18_Template","AppComponent_div_12_Template_input_ngModelChange_22_listener","ctx_r17","messageContent","ɵɵelement","AppComponent_div_12_Template_button_click_24_listener","ctx_r18","sendInvitation","AppComponent_div_12_Template_button_click_26_listener","ctx_r19","sendMessage","AppComponent_div_12_Template_input_ngModelChange_29_listener","ctx_r20","searchQuery","AppComponent_div_12_Template_input_keyup_enter_29_listener","ctx_r21","searchUsers","AppComponent_div_12_Template_button_click_30_listener","ctx_r22","AppComponent_div_12_div_32_Template","AppComponent_div_12_div_35_Template","ctx_r1","users","length","greeting","AppComponent","constructor","http","title","userList","name","ngOnInit","webSocketAPI","fetchUserList","get","subscribe","response","error","console","_connect","_disconnect","setUser","trim","_sendHelloMessage","_send","JSON","stringify","recipient","type","push","receiver","_sendInvitation","selectUser","user","log","alert","handleMessage","message","parsedMessage","parse","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_tr_11_Template","AppComponent_div_12_Template"],"sources":["C:\\Users\\hp\\coChat\\src\\app\\app.component.ts","C:\\Users\\hp\\coChat\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WebSocketAPI } from './services/WebSocketAPI';\nimport { HttpClient } from '@angular/common/http';\ninterface User {\n  userId: number;\n  userName: string;\n  userMail: string;\n  // Add more properties as needed\n}\ninterface InvitationMessage {\n  sender: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'coChat';\n  userList: User[] = [];\n  webSocketAPI!: WebSocketAPI;\n  selectedRecipient: User | null = null;\n\n  users: string[] = ['User1', 'User2', 'User3']; // Replace this with your list of users\n  //selectedRecipient: User | null = null; // Store the selected recipient\n \n  greeting: any;\n  name: string = '';\n  messageContent: string = '';\n  messages: { sender: string, receiver: string, content: string }[] = [];\n\n  searchQuery: string = '';\n  searchResults: any[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n    this.fetchUserList();\n  }\n  fetchUserList() {\n    this.http.get<User[]>('http://localhost:8080/api/auth/list').subscribe(\n      (response) => {\n        this.userList = response;\n      },\n      (error) => {\n        console.error('Error fetching user list:', error);\n      }\n    );\n  }\n\n  connect() {\n    this.webSocketAPI._connect();\n  }\n\n  disconnect() {\n    this.webSocketAPI._disconnect();\n  }\n\n  // Method to set the user's name during signup\n  setUser(name: string) {\n    this.name = name;\n  }\n\n /* sendMessage() {\n    if (this.messageContent.trim() === '' || this.selectedRecipient.trim() === '') {\n      return; // Don't send empty messages or if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient,\n      content: this.messageContent\n    }));\n\n    // Add the sent message to the messages list\n    this.messages.push({ sender: this.name, receiver: this.selectedRecipient, content: this.messageContent });\n    this.messageContent = ''; // Clear the message input box after sending\n  }\n\n  sendInvitation() {\n    if (this.selectedRecipient.trim() === '') {\n      return; // Don't send invitations if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient,\n      content: \"Invitation from \" + this.name // Customize the invitation content as needed\n    }));\n  }\n*/\nsendMessage() {\n /* if (!this.selectedRecipient || !this.messageContent.trim()) {\n    return; // Don't send empty messages or if the recipient is not selected\n  }\n\n  this.webSocketAPI._send(JSON.stringify({\n    sender: this.name,\n    recipient: this.selectedRecipient.userName,\n    content: this.messageContent\n  }));\n\n  // Add the sent message to the messages list\n  this.messages.push({ sender: this.name, receiver: this.selectedRecipient.userName, content: this.messageContent });\n  this.messageContent = ''; // Clear the message input box after sending\n*/\nif (!this.selectedRecipient || !this.messageContent.trim()) {\n  return; // Don't send empty messages or if the recipient is not selected\n}\n\nif (this.selectedRecipient.userName === this.name) {\n  // Send a greeting message to oneself\n  this.webSocketAPI._sendHelloMessage(this.name,this.messageContent);\n} else {\n  // Send a chat message to the selected recipient\n  this.webSocketAPI._send(JSON.stringify({\n    sender: this.name,\n    recipient: this.selectedRecipient.userName,\n    content: this.messageContent,\n    type: \"chat\"\n  }));\n}  // Add the sent message to the messages list\nthis.messages.push({ sender: this.name, receiver: this.selectedRecipient.userName, content: this.messageContent });\nthis.messageContent = ''; // Clear the message input box after sending\n}\n\nsendInvitation() {\n  if (!this.selectedRecipient) {\n    return; // Don't send invitations if the recipient is not selected\n  }\n\n  this.webSocketAPI._sendInvitation(\"Invitation from \" + this.name);\n\n  /*if (!this.selectedRecipient) {\n    return; // Don't send invitations if the recipient is not selected\n  }\n  \n\n  this.webSocketAPI._send(JSON.stringify({\n    sender: this.name,\n    recipient: this.selectedRecipient.userName,\n    content: \"Invitation from \" + this.name // Customize the invitation content as needed\n  }));*/\n}\nselectUser(user: User) {\n  // Set the selected recipient when a user is clicked from the search results\n  this.selectedRecipient = user;\n}\n\n  searchUsers() {\n    if (!this.searchQuery) {\n      // Empty search query, clear the search results\n      this.searchResults = [];\n      return;\n    }\n\n    // Call the backend API to retrieve the search results\n    this.http.get<any[]>(`http://localhost:8080/api/auth/users?userName=${this.searchQuery}`).subscribe(\n      (response) => {\n        this.searchResults = response;\n        console.log('search results', response);\n      },\n      (error) => {\n        console.error('Error fetching search results:', error);\n      }\n    );\n  }\n\n  sendInvitationn(user: any) {\n    if (!user || !user.userName) {\n      return; // Invalid user, handle error if needed\n    }\n  \n    console.log(\"Sending invitation to user:\", user.userName);\n  \n    // Call the WebSocketAPI to send the invitation\n    this.webSocketAPI._sendInvitation(JSON.stringify({ sender: this.name }));\n    \n    // Handle the invitation logic here, e.g., display a notification or confirmation message\n    // You can customize this according to your requirements\n    alert(\"Invitation sent to \" + user.userName);\n  }\n\n  handleMessage(message: any) {\n    console.log(\"Message Received from Server :: \", message);\n    this.greeting = message;\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({ sender: parsedMessage.sender, receiver: parsedMessage.recipient, content: parsedMessage.content });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\n","<!-- The signup form -->\r\n\r\n  <app-register></app-register>\r\n\r\n<h1>User List</h1>\r\n<table>\r\n  <tr>\r\n    <th>User ID</th>\r\n    <th>User Name</th>\r\n    <th>User Mail</th>\r\n    <!-- Add more columns here as needed -->\r\n  </tr>\r\n  <tr *ngFor=\"let user of userList\">\r\n    <td>{{ user.userId }}</td>\r\n    <td>{{ user.userName }}</td>\r\n    <td>{{ user.userMail }}</td>\r\n    <!-- Add more columns here as needed -->\r\n  </tr>\r\n</table>\r\n<!-- The chat components -->\r\n<div *ngIf=\"name\">\r\n  <div id=\"main-content\" class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <label for=\"connect\">WebSocket connection:</label>\r\n            <button (click)=\"connect()\" class=\"btn btn-default\" type=\"button\">Connect</button>\r\n            <button (click)=\"disconnect()\" class=\"btn btn-default\" type=\"button\">Disconnect</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient\">Select recipient:</label>\r\n            <select [(ngModel)]=\"selectedRecipient\" class=\"form-control\" name=\"recipient\">\r\n              <option *ngFor=\"let user of users\" [value]=\"user\">{{ user }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"message\">Enter your message:</label>\r\n            <input type=\"text\" [(ngModel)]=\"messageContent\" class=\"form-control\" name=\"message\"> <br>\r\n          </div>\r\n          <button (click)=\"sendInvitation()\" class=\"btn btn-default\" type=\"button\">Send Invitation</button>\r\n          <button (click)=\"sendMessage()\" class=\"btn btn-default\" type=\"button\">Send Message</button>\r\n        </form>\r\n      </div>\r\n     \r\n\r\n\r\n      \r\n      <!-- <div>\r\n        <input type=\"text\" [(ngModel)]=\"searchQuery\" (keyup.enter)=\"searchUsers()\" placeholder=\"Search for users\">\r\n        <button (click)=\"searchUsers()\">Search</button>\r\n      </div>\r\n      \r\n      Display search results \r\n      <div *ngIf=\"searchResults.length > 0\">\r\n        <h2>Search Results:</h2>\r\n        <ul>\r\n          <li *ngFor=\"let user of searchResults\">\r\n            {{ user.name }} ({{ user.userName }})\r\n            <button (click)=\"sendInvitationn(user)\">Invite</button>\r\n          </li>\r\n        </ul>\r\n      </div>-->\r\n       <!-- Search bar -->\r\n    <div>\r\n      <input type=\"text\" [(ngModel)]=\"searchQuery\" (keyup.enter)=\"searchUsers()\" placeholder=\"Search for users\">\r\n      <button (click)=\"searchUsers()\">Search</button>\r\n    </div>\r\n <!-- Display the chat messages -->\r\n <div *ngIf=\"messages.length > 0\">\r\n  <h2>Chat Messages:</h2>\r\n  <ul>\r\n    <li *ngFor=\"let message of messages\">\r\n      <strong>{{ message.sender }}</strong>: {{ message.content }}\r\n    </li>\r\n  </ul>\r\n</div>\r\n<p> {{ greeting }}</p>\r\n    <!-- Display search results -->\r\n    <div *ngIf=\"searchResults.length > 0\">\r\n      <h2>Search Results:</h2>\r\n      <ul>\r\n        <li *ngFor=\"let user of searchResults\">\r\n          {{ user.userName }}\r\n          <button (click)=\"sendInvitationn(user)\">Invite</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}