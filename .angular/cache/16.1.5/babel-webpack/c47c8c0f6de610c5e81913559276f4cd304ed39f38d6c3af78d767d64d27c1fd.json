{"ast":null,"code":"import { WebSocketAPI } from './services/WebSocketAPI';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-register\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r3.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r3.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r3.userMail);\n  }\n}\nfunction AppComponent_div_12_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", user_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r7.userName);\n  }\n}\nfunction AppComponent_div_12_div_32_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_div_32_li_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const user_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r10.selectUser(user_r9));\n    });\n    i0.ɵɵtext(3, \"Select\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_div_32_li_4_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const user_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r12.sendInvitationn(user_r9));\n    });\n    i0.ɵɵtext(5, \"Invite\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r9.userName, \" \");\n  }\n}\nfunction AppComponent_div_12_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Search Results:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, AppComponent_div_12_div_32_li_4_Template, 6, 1, \"li\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.searchResults);\n  }\n}\nfunction AppComponent_div_12_li_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2, \"From:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"To:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8, \"Content:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r13 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r13.sender, \" | \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r13.receiver, \" | \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r13.content, \" \");\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"form\", 5)(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"WebSocket connection:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.connect());\n    });\n    i0.ɵɵtext(9, \"Connect\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.disconnect());\n    });\n    i0.ɵɵtext(11, \"Disconnect\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(12, \"div\", 4)(13, \"form\", 5)(14, \"div\", 6)(15, \"label\", 9);\n    i0.ɵɵtext(16, \"Select recipient:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"select\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_12_Template_select_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.selectedRecipient = $event);\n    })(\"change\", function AppComponent_div_12_Template_select_change_17_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.selectUser(ctx_r18.selectedRecipient));\n    });\n    i0.ɵɵtemplate(18, AppComponent_div_12_option_18_Template, 2, 2, \"option\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 12);\n    i0.ɵɵtext(21, \"Enter your message:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_12_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.messageContent = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.sendInvitation());\n    });\n    i0.ɵɵtext(25, \"Send Invitation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.sendMessage());\n    });\n    i0.ɵɵtext(27, \"Send Message\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(28, \"div\")(29, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_12_Template_input_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.searchQuery = $event);\n    })(\"keyup.enter\", function AppComponent_div_12_Template_input_keyup_enter_29_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.searchUsers());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.searchUsers());\n    });\n    i0.ɵɵtext(31, \"Search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(32, AppComponent_div_12_div_32_Template, 5, 1, \"div\", 0);\n    i0.ɵɵelementStart(33, \"div\", 3)(34, \"div\", 16)(35, \"h2\");\n    i0.ɵɵtext(36, \"Messages:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"ul\");\n    i0.ɵɵtemplate(38, AppComponent_div_12_li_38_Template, 10, 3, \"li\", 1);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedRecipient);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.searchResults);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.messageContent);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.searchQuery);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.searchResults.length > 0);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.messages);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'coChat';\n    this.userList = [];\n    this.selectedRecipient = null; // Store the selected recipient\n    this.name = '';\n    this.messageContent = '';\n    this.messages = [];\n    this.searchQuery = '';\n    this.searchResults = [];\n  }\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n    this.fetchUserList();\n  }\n  fetchUserList() {\n    this.http.get('http://localhost:8080/api/auth/list').subscribe(response => {\n      this.userList = response;\n    }, error => {\n      console.error('Error fetching user list:', error);\n    });\n  }\n  connect() {\n    this.webSocketAPI._connect();\n  }\n  disconnect() {\n    this.webSocketAPI._disconnect();\n  }\n  // Method to set the user's name during signup\n  setUser(name) {\n    this.name = name;\n  }\n  sendMessage() {\n    if (!this.selectedRecipient || !this.messageContent.trim()) {\n      return; // Don't send empty messages or if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient.userName,\n      content: this.messageContent\n    }));\n    // Add the sent message to the messages list\n    this.messages.push({\n      sender: this.name,\n      receiver: this.selectedRecipient.userName,\n      content: this.messageContent\n    });\n    this.messageContent = ''; // Clear the message input box after sending\n  }\n\n  sendInvitation() {\n    if (!this.selectedRecipient) {\n      return; // Don't send invitations if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient.userName,\n      content: \"Invitation from \" + this.name // Customize the invitation content as needed\n    }));\n  }\n\n  searchUsers() {\n    if (!this.searchQuery) {\n      // Empty search query, clear the search results\n      this.searchResults = [];\n      return;\n    }\n    // Call the backend API to retrieve the search results\n    this.http.get(`http://localhost:8080/api/auth/users?userName=${this.searchQuery}`).subscribe(response => {\n      this.searchResults = response;\n      console.log('search results', response);\n    }, error => {\n      console.error('Error fetching search results:', error);\n    });\n  }\n  selectUser(user) {\n    // Set the selected recipient when a user is clicked from the search results\n    this.selectedRecipient = user;\n  }\n  handleMessage(message) {\n    console.log(\"Message Received from Server :: \", message);\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({\n          sender: parsedMessage.sender,\n          receiver: parsedMessage.recipient,\n          content: parsedMessage.content\n        });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"main-content\", 1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-inline\"], [1, \"form-group\"], [\"for\", \"connect\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"for\", \"recipient\"], [\"name\", \"recipient\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"message\"], [\"type\", \"text\", \"name\", \"message\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Search for users\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"], [1, \"col-md-12\"], [3, \"ngValue\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_div_0_Template, 2, 0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \"User List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"User ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"User Mail\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, AppComponent_tr_11_Template, 7, 3, \"tr\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AppComponent_div_12_Template, 39, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.name);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["WebSocketAPI","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","user_r3","userId","userName","userMail","ɵɵproperty","user_r7","ɵɵlistener","AppComponent_div_12_div_32_li_4_Template_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r11","user_r9","$implicit","ctx_r10","ɵɵnextContext","ɵɵresetView","selectUser","AppComponent_div_12_div_32_li_4_Template_button_click_4_listener","ctx_r12","sendInvitationn","ɵɵtextInterpolate1","ɵɵtemplate","AppComponent_div_12_div_32_li_4_Template","ctx_r5","searchResults","message_r13","sender","receiver","content","AppComponent_div_12_Template_button_click_8_listener","_r15","ctx_r14","connect","AppComponent_div_12_Template_button_click_10_listener","ctx_r16","disconnect","AppComponent_div_12_Template_select_ngModelChange_17_listener","$event","ctx_r17","selectedRecipient","AppComponent_div_12_Template_select_change_17_listener","ctx_r18","AppComponent_div_12_option_18_Template","AppComponent_div_12_Template_input_ngModelChange_22_listener","ctx_r19","messageContent","AppComponent_div_12_Template_button_click_24_listener","ctx_r20","sendInvitation","AppComponent_div_12_Template_button_click_26_listener","ctx_r21","sendMessage","AppComponent_div_12_Template_input_ngModelChange_29_listener","ctx_r22","searchQuery","AppComponent_div_12_Template_input_keyup_enter_29_listener","ctx_r23","searchUsers","AppComponent_div_12_Template_button_click_30_listener","ctx_r24","AppComponent_div_12_div_32_Template","AppComponent_div_12_li_38_Template","ctx_r2","length","messages","AppComponent","constructor","http","title","userList","name","ngOnInit","webSocketAPI","fetchUserList","get","subscribe","response","error","console","_connect","_disconnect","setUser","trim","_send","JSON","stringify","recipient","push","log","user","handleMessage","message","parsedMessage","parse","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","AppComponent_tr_11_Template","AppComponent_div_12_Template"],"sources":["C:\\Users\\hp\\coChat\\src\\app\\app.component.ts","C:\\Users\\hp\\coChat\\src\\app\\app.component.html"],"sourcesContent":["/*import { Component } from '@angular/core';\nimport { WebSocketAPI } from './services/WebSocketAPI';\nimport { HttpClient } from '@angular/common/http';\ninterface User {\n  userId: number;\n  userName: string;\n  userMail: string;\n  // Add more properties as needed\n}\ninterface InvitationMessage {\n  sender: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'coChat';\n  userList: User[] = [];\n  webSocketAPI!: WebSocketAPI;\n  selectedRecipient: string = '';\n  users: string[] = ['User1', 'User2', 'User3']; // Replace this with your list of users\n\n  greeting: any;\n  name: string = '';\n  messageContent: string = '';\n  messages: { sender: string, receiver: string, content: string }[] = [];\n\n  searchQuery: string = '';\n  searchResults: any[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n    this.fetchUserList();\n  }\n  fetchUserList() {\n    this.http.get<User[]>('http://localhost:8080/api/auth/list').subscribe(\n      (response) => {\n        this.userList = response;\n      },\n      (error) => {\n        console.error('Error fetching user list:', error);\n      }\n    );\n  }\n\n  connect() {\n    this.webSocketAPI._connect();\n  }\n\n  disconnect() {\n    this.webSocketAPI._disconnect();\n  }\n\n  // Method to set the user's name during signup\n  setUser(name: string) {\n    this.name = name;\n  }\n\n  sendMessage() {\n    if (this.messageContent.trim() === '' || this.selectedRecipient.trim() === '') {\n      return; // Don't send empty messages or if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient,\n      content: this.messageContent\n    }));\n\n    // Add the sent message to the messages list\n    this.messages.push({ sender: this.name, receiver: this.selectedRecipient, content: this.messageContent });\n    this.messageContent = ''; // Clear the message input box after sending\n  }\n\n  sendInvitation() {\n    if (this.selectedRecipient.trim() === '') {\n      return; // Don't send invitations if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient,\n      content: \"Invitation from \" + this.name // Customize the invitation content as needed\n    }));\n  }\n\n  searchUsers() {\n    if (!this.searchQuery) {\n      // Empty search query, clear the search results\n      this.searchResults = [];\n      return;\n    }\n\n    // Call the backend API to retrieve the search results\n    this.http.get<any[]>(`http://localhost:8080/api/auth/users?userName=${this.searchQuery}`).subscribe(\n      (response) => {\n        this.searchResults = response;\n        console.log('search results', response);\n      },\n      (error) => {\n        console.error('Error fetching search results:', error);\n      }\n    );\n  }\n\n  sendInvitationn(user: any) {\n    if (!user || !user.userName) {\n      return; // Invalid user, handle error if needed\n    }\n  \n    console.log(\"Sending invitation to user:\", user.userName);\n  \n    // Call the WebSocketAPI to send the invitation\n    this.webSocketAPI._sendInvitation(JSON.stringify({ sender: this.name }));\n    \n    // Handle the invitation logic here, e.g., display a notification or confirmation message\n    // You can customize this according to your requirements\n    alert(\"Invitation sent to \" + user.userName);\n  }\n\n  handleMessage(message: any) {\n    console.log(\"Message Received from Server :: \", message);\n\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({ sender: parsedMessage.sender, receiver: parsedMessage.recipient, content: parsedMessage.content });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\n\n*/\nimport { Component } from '@angular/core';\nimport { WebSocketAPI } from './services/WebSocketAPI';\nimport { HttpClient } from '@angular/common/http';\n\ninterface User {\n  userId: number;\n  userName: string;\n  userMail: string;\n  // Add more properties as needed\n}\n\ninterface InvitationMessage {\n  sender: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'coChat';\n  userList: User[] = [];\n  webSocketAPI!: WebSocketAPI;\n  selectedRecipient: User | null = null; // Store the selected recipient\n  greeting: any;\n  name: string = '';\n  messageContent: string = '';\n  messages: { sender: string, receiver: string, content: string }[] = [];\n\n  searchQuery: string = '';\n  searchResults: User[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.webSocketAPI = new WebSocketAPI(this); // Pass the current instance of AppComponent\n    this.fetchUserList();\n  }\n\n  fetchUserList() {\n    this.http.get<User[]>('http://localhost:8080/api/auth/list').subscribe(\n      (response) => {\n        this.userList = response;\n      },\n      (error) => {\n        console.error('Error fetching user list:', error);\n      }\n    );\n  }\n\n  connect() {\n    this.webSocketAPI._connect();\n  }\n\n  disconnect() {\n    this.webSocketAPI._disconnect();\n  }\n\n  // Method to set the user's name during signup\n  setUser(name: string) {\n    this.name = name;\n  }\n\n  sendMessage() {\n    if (!this.selectedRecipient || !this.messageContent.trim()) {\n      return; // Don't send empty messages or if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient.userName,\n      content: this.messageContent\n    }));\n\n    // Add the sent message to the messages list\n    this.messages.push({ sender: this.name, receiver: this.selectedRecipient.userName, content: this.messageContent });\n    this.messageContent = ''; // Clear the message input box after sending\n  }\n\n  sendInvitation() {\n    if (!this.selectedRecipient) {\n      return; // Don't send invitations if the recipient is not selected\n    }\n\n    this.webSocketAPI._send(JSON.stringify({\n      sender: this.name,\n      recipient: this.selectedRecipient.userName,\n      content: \"Invitation from \" + this.name // Customize the invitation content as needed\n    }));\n  }\n\n  searchUsers() {\n    if (!this.searchQuery) {\n      // Empty search query, clear the search results\n      this.searchResults = [];\n      return;\n    }\n\n    // Call the backend API to retrieve the search results\n    this.http.get<User[]>(`http://localhost:8080/api/auth/users?userName=${this.searchQuery}`).subscribe(\n      (response) => {\n        this.searchResults = response;\n        console.log('search results', response);\n      },\n      (error) => {\n        console.error('Error fetching search results:', error);\n      }\n    );\n  }\n\n  selectUser(user: User) {\n    // Set the selected recipient when a user is clicked from the search results\n    this.selectedRecipient = user;\n  }\n\n  handleMessage(message: any) {\n    console.log(\"Message Received from Server :: \", message);\n\n    if (typeof message === \"string\") {\n      // Parse the JSON data\n      try {\n        const parsedMessage = JSON.parse(message);\n        // Now you can access properties of the parsed message and handle it accordingly\n        console.log(\"Parsed Message:\", parsedMessage);\n        this.messages.push({ sender: parsedMessage.sender, receiver: parsedMessage.recipient, content: parsedMessage.content });\n      } catch (error) {\n        console.error(\"Error parsing message:\", error);\n      }\n    } else {\n      console.error(\"Invalid message format:\", message);\n    }\n  }\n}\n","\r\n<!-- The signup form \r\n<div *ngIf=\"!name\">\r\n  <app-register></app-register>\r\n</div>\r\n<h1>User List</h1>\r\n<table>\r\n  <tr>\r\n    <th>User ID</th>\r\n    <th>User Name</th>\r\n    <th>User Mail</th>\r\n    <!-- Add more columns here as needed \r\n  </tr>\r\n  <tr *ngFor=\"let user of userList\">\r\n    <td>{{ user.userId }}</td>\r\n    <td>{{ user.userName }}</td>\r\n    <td>{{ user.userMail }}</td>\r\n    <!-- Add more columns here as needed \r\n  </tr>\r\n</table>\r\n<!-- The chat components \r\n<div *ngIf=\"name\">\r\n  <div id=\"main-content\" class=\"container\">\r\n    <!-- ... (existing code) ... \r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <label for=\"connect\">WebSocket connection:</label>\r\n            <button (click)=\"connect()\" class=\"btn btn-default\" type=\"button\">Connect</button>\r\n            <button (click)=\"disconnect()\" class=\"btn btn-default\" type=\"button\">Disconnect</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient\">Select recipient:</label>\r\n            <select [(ngModel)]=\"selectedRecipient\" class=\"form-control\" name=\"recipient\">\r\n              <option *ngFor=\"let user of users\" [value]=\"user\">{{ user }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"message\">Enter your message:</label>\r\n            <input type=\"text\" [(ngModel)]=\"messageContent\" class=\"form-control\" name=\"message\"> <br>\r\n          </div>\r\n          <button (click)=\"sendInvitation()\" class=\"btn btn-default\" type=\"button\">Send Invitation</button>\r\n          <button (click)=\"sendMessage()\" class=\"btn btn-default\" type=\"button\">Send Message</button>\r\n        </form>\r\n      </div>\r\n     \r\n\r\n\r\n      \r\n      <!-- <div>\r\n        <input type=\"text\" [(ngModel)]=\"searchQuery\" (keyup.enter)=\"searchUsers()\" placeholder=\"Search for users\">\r\n        <button (click)=\"searchUsers()\">Search</button>\r\n      </div>\r\n      \r\n      Display search results \r\n      <div *ngIf=\"searchResults.length > 0\">\r\n        <h2>Search Results:</h2>\r\n        <ul>\r\n          <li *ngFor=\"let user of searchResults\">\r\n            {{ user.name }} ({{ user.userName }})\r\n            <button (click)=\"sendInvitationn(user)\">Invite</button>\r\n          </li>\r\n        </ul>\r\n      </div>-->\r\n       <!-- Search bar \r\n    <div>\r\n      <input type=\"text\" [(ngModel)]=\"searchQuery\" (keyup.enter)=\"searchUsers()\" placeholder=\"Search for users\">\r\n      <button (click)=\"searchUsers()\">Search</button>\r\n    </div>\r\n\r\n    <!-- Display search results \r\n    <div *ngIf=\"searchResults.length > 0\">\r\n      <h2>Search Results:</h2>\r\n      <ul>\r\n        <li *ngFor=\"let user of searchResults\">\r\n          {{ user.userName }}\r\n          <button (click)=\"sendInvitationn(user)\">Invite</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n\r\n\r\n    </div>\r\n    <!-- ... (existing code) ... \r\n  </div>\r\n</div>-->\r\n\r\n<div *ngIf=\"!name\">\r\n  <app-register></app-register>\r\n</div>\r\n\r\n<h1>User List</h1>\r\n<table>\r\n  <tr>\r\n    <th>User ID</th>\r\n    <th>User Name</th>\r\n    <th>User Mail</th>\r\n    <!-- Add more columns here as needed -->\r\n  </tr>\r\n  <tr *ngFor=\"let user of userList\">\r\n    <td>{{ user.userId }}</td>\r\n    <td>{{ user.userName }}</td>\r\n    <td>{{ user.userMail }}</td>\r\n    <!-- Add more columns here as needed -->\r\n  </tr>\r\n</table>\r\n\r\n<div *ngIf=\"name\">\r\n  <div id=\"main-content\" class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <label for=\"connect\">WebSocket connection:</label>\r\n            <button (click)=\"connect()\" class=\"btn btn-default\" type=\"button\">Connect</button>\r\n            <button (click)=\"disconnect()\" class=\"btn btn-default\" type=\"button\">Disconnect</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <form class=\"form-inline\">\r\n          <div class=\"form-group\">\r\n            <label for=\"recipient\">Select recipient:</label>\r\n            <select [(ngModel)]=\"selectedRecipient\" class=\"form-control\" name=\"recipient\" (change)=\"selectUser(selectedRecipient)\">\r\n              <option *ngFor=\"let user of searchResults\" [ngValue]=\"user\">{{ user.userName }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"message\">Enter your message:</label>\r\n            <input type=\"text\" [(ngModel)]=\"messageContent\" class=\"form-control\" name=\"message\"> <br>\r\n          </div>\r\n          <button (click)=\"sendInvitation()\" class=\"btn btn-default\" type=\"button\">Send Invitation</button>\r\n          <button (click)=\"sendMessage()\" class=\"btn btn-default\" type=\"button\">Send Message</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Search bar -->\r\n    <div>\r\n      <input type=\"text\" [(ngModel)]=\"searchQuery\" (keyup.enter)=\"searchUsers()\" placeholder=\"Search for users\">\r\n      <button (click)=\"searchUsers()\">Search</button>\r\n    </div>\r\n\r\n    <!-- Display search results -->\r\n    <div *ngIf=\"searchResults.length > 0\">\r\n      <h2>Search Results:</h2>\r\n      <ul>\r\n        <li *ngFor=\"let user of searchResults\">\r\n          {{ user.userName }}\r\n          <button (click)=\"selectUser(user)\">Select</button>\r\n          <button (click)=\"sendInvitationn(user)\">Invite</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Messages -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <h2>Messages:</h2>\r\n        <ul>\r\n          <li *ngFor=\"let message of messages\">\r\n            <strong>From:</strong> {{ message.sender }} |\r\n            <strong>To:</strong> {{ message.receiver }} |\r\n            <strong>Content:</strong> {{ message.content }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}