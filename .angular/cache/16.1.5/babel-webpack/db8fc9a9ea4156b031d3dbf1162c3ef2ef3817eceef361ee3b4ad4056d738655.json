{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_small_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" L'adresse email est obligatoire. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_34_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Entrer une email valide. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 33);\n    i0.ɵɵtemplate(1, LoginComponent_small_34_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, LoginComponent_small_34_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.email.errors == null ? null : ctx_r1.email.errors.required) && ctx_r1.email.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.email.errors == null ? null : ctx_r1.email.errors.email);\n  }\n}\nfunction LoginComponent_small_38_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Ce champ est obligatoire. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_38_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Le mot de passe doit contenir des lettres et des chiffres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_38_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Le mot de passe doit comporter au moins 8 caract\\u00E8res. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 33);\n    i0.ɵɵtemplate(1, LoginComponent_small_38_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, LoginComponent_small_38_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(3, LoginComponent_small_38_div_3_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors.pattern);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors == null ? null : ctx_r2.password.errors.minlength);\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, authService, service, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.service = service;\n    this.router = router;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n    this.userMail = \"\";\n    this.userPassword = \"\";\n    this.siteKey = \"6LfltwkbAAAAAEG_xuXSPuAtxgxxvKi_jFxaNcjN\";\n    this.localpattern = \"[^[a-zA-Z0-9]{6,16}$]\";\n    this.isSubmitted = false;\n    this.loginForm = new FormGroup({\n      userMail: new FormControl('', [Validators.required, Validators.email]),\n      userPassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(64)])\n    });\n    this.loginPayload = {\n      userMail: '',\n      userPassword: ''\n    };\n  }\n  ngOnInit() {}\n  get mail() {\n    return this.loginForm.get('userMail');\n  }\n  get password() {\n    return this.loginForm.get('userPassword');\n  }\n  onSubmit() {\n    this.loginPayload.userMail = this.mail?.value;\n    this.loginPayload.userPassword = this.password?.value;\n    if (this.loginForm.invalid) {\n      alert('Votre formulaire est invalide.');\n    } else {\n      this.authService.login(this.loginPayload).subscribe(data => {\n        if (data) {\n          console.log(\"login success\");\n          this.router.navigateByUrl(`/`);\n        } else {\n          console.log(\"login failed\");\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 50,\n  vars: 18,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [\"loginForm\", \"ngForm\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"type\", \"email\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"type\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"fa\", \"fa-eye-slash\", 3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\", \"w-100\"], [\"href\", \"\", \"id\", \"forget\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-5\", 3, \"click\"], [1, \"fa\", \"fa-lock\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"routerLink\", \"/register\", \"id\", \"sign\"], [\"novalidate\", \"\", 1, \"form-signin\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"inputEmail\", 1, \"sr-only\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Entrez votre adresse email\", \"required\", \"\", \"autofocus\", \"\", \"email\", \"\", 1, \"form-control\", 3, \"formControlName\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"inputPassword\", 1, \"sr-only\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Entre votre mot de passe\", \"required\", \"\", \"autofocus\", \"\", \"minlength\", \"8\", \"maxlength\", \"64\", \"pattern\", \"^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$\", 1, \"form-control\", 3, \"formControlName\"], [\"type\", \"submit\"], [1, \"forgot-password\"], [\"routerLink\", \"/\"], [\"routerLink\", \"/register\"], [1, \"help-block\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", null, 8)(11, \"div\", 9)(12, \"div\", 10);\n      i0.ɵɵelement(13, \"span\", 11);\n      i0.ɵɵelementStart(14, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.userMail = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"i\", 13);\n      i0.ɵɵelementStart(18, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.userPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"span\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_19_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 16)(21, \"a\", 17);\n      i0.ɵɵtext(22, \"Forget Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.login(_r0));\n      });\n      i0.ɵɵelement(24, \"span\", 19);\n      i0.ɵɵtext(25, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 20);\n      i0.ɵɵtext(27, \"Don't have account ? \");\n      i0.ɵɵelementStart(28, \"a\", 21);\n      i0.ɵɵtext(29, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n      i0.ɵɵelementStart(30, \"form\", 22);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_30_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(31, \"div\", 23);\n      i0.ɵɵelement(32, \"label\", 24)(33, \"input\", 25);\n      i0.ɵɵtemplate(34, LoginComponent_small_34_Template, 3, 2, \"small\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 23);\n      i0.ɵɵelement(36, \"label\", 27)(37, \"input\", 28);\n      i0.ɵɵtemplate(38, LoginComponent_small_38_Template, 4, 3, \"small\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 29);\n      i0.ɵɵtext(40, \"Se Connecter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 30)(42, \"a\", 31);\n      i0.ɵɵtext(43, \"mot de passe oubli\\u00E9 ?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"p\");\n      i0.ɵɵtext(45, \"Vous n'avez pas de compte ? \");\n      i0.ɵɵelementStart(46, \"a\", 32);\n      i0.ɵɵtext(47, \"s'inscrire\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(48, \"br\")(49, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.userMail)(\"ngModelOptions\", i0.ɵɵpureFunction0(12, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.type)(\"ngModel\", ctx.userPassword)(\"ngModelOptions\", i0.ɵɵpureFunction0(13, _c0));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"formGroup\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c1, ctx.isSubmitted && ctx.email.errors));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControlName\", \"email\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && ctx.email.touched && ctx.email.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c1, ctx.isSubmitted && ctx.password.errors));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formControlName\", \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && ctx.password.touched);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.PatternValidator, i1.EmailValidator, i1.NgModel, i1.NgForm],\n  styles: [\"#forget[_ngcontent-%COMP%]{\\n    min-width: 100px;\\n   \\n    text-decoration: none;\\n    cursor: pointer;\\n    margin-left: 10%;\\n}\\n\\n#sign[_ngcontent-%COMP%]{\\n    min-width: 100px;\\n    margin-left: auto;\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]{\\n    width: 35%;\\n    margin-top: 20px;\\n    border-radius: 15px;\\n    margin-left: 10%;\\n    background-color: rgb(52, 147, 137);\\n    color: #ffffff;\\n    border: none;\\n}\\n\\n.btn-danger[_ngcontent-%COMP%]{\\n    width: 35%;\\n    margin-top: 20px;\\n    border-radius: 15px;\\n    margin-left: 10%;\\n    color: #ffffff;\\n    background-color: rgb(192, 38, 38);\\n    border: none;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCOztJQUVoQixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsbUNBQW1DO0lBQ25DLGNBQWM7SUFDZCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxrQ0FBa0M7SUFDbEMsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIiNmb3JnZXR7XHJcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xyXG4gICBcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbn1cclxuXHJcbiNzaWdue1xyXG4gICAgbWluLXdpZHRoOiAxMDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnl7XHJcbiAgICB3aWR0aDogMzUlO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUyLCAxNDcsIDEzNyk7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmJ0bi1kYW5nZXJ7XHJcbiAgICB3aWR0aDogMzUlO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTkyLCAzOCwgMzgpO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_small_34_div_1_Template","LoginComponent_small_34_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r1","email","errors","required","touched","LoginComponent_small_38_div_1_Template","LoginComponent_small_38_div_2_Template","LoginComponent_small_38_div_3_Template","ctx_r2","password","pattern","minlength","LoginComponent","constructor","formBuilder","authService","service","router","type","isText","eyeIcon","userMail","userPassword","siteKey","localpattern","isSubmitted","loginForm","minLength","maxLength","loginPayload","ngOnInit","mail","get","onSubmit","value","invalid","alert","login","subscribe","data","console","log","navigateByUrl","ɵɵdirectiveInject","i1","FormBuilder","i2","LoginService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_input_ngModelChange_14_listener","$event","LoginComponent_Template_input_ngModelChange_18_listener","LoginComponent_Template_span_click_19_listener","hideShowPass","LoginComponent_Template_button_click_23_listener","ɵɵrestoreView","_r8","_r0","ɵɵreference","ɵɵresetView","LoginComponent_Template_form_ngSubmit_30_listener","LoginComponent_small_34_Template","LoginComponent_small_38_Template","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c1"],"sources":["C:\\Users\\hp\\coChat\\src\\app\\components\\login\\login.component.ts","C:\\Users\\hp\\coChat\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthData, AuthenticationResponse, LoginService, RegisterData } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon:string = \"fa-eye-slash\";\n\n  userMail: string=\"\";\n  userPassword: string=\"\";\n\n  /////\n  loginForm: FormGroup;\n  loginPayload: AuthData;\n  siteKey: string = \"6LfltwkbAAAAAEG_xuXSPuAtxgxxvKi_jFxaNcjN\";\n \n  localpattern = \"[^[a-zA-Z0-9]{6,16}$]\";\n  \n  isSubmitted = false;\n\n  constructor(private formBuilder: FormBuilder, private authService: LoginService, private service: LoginService,private router:Router) {\n\n    this.loginForm = new FormGroup({\n      userMail: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      userPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(64),   \n      ])\n    });\n\n    this.loginPayload = {\n      userMail: '',\n      userPassword: ''\n    };\n  }\n\n  ngOnInit(): void { }\n  \n  get mail() { return this.loginForm.get('userMail') }\n  get password() { return this.loginForm.get('userPassword') }\n\n  onSubmit() {\n    this.loginPayload.userMail = this.mail?.value;\n    this.loginPayload.userPassword = this.password?.value;\n\n    if (this.loginForm.invalid) {\n      alert('Votre formulaire est invalide.');\n    } else {\n      this.authService.login(this.loginPayload).subscribe(data => {\n        if (data) {\n          console.log(\"login success\");\n          this.router.navigateByUrl(`/`);\n        } else {\n          console.log(\"login failed\");\n        }\n      });\n    }\n  }\n\n  // ... Rest of the code (hideShowPass and login methods) ...\n}\n","<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form #loginForm=\"ngForm\">\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input type=\"email\" [(ngModel)]=\"userMail\" [ngModelOptions]=\"{standalone: true}\" aria-describedby=\"emailHelp\" class=\"form-control\" placeholder=\"Email\">\n                                </div>\n                            </div>\n\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\">\n                                    <i class=\"fa fa-lock p-2\"></i>\n                                    <input [type]=\"type\" type=\"password\" [(ngModel)]=\"userPassword\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa fa-eye-slash\"></span>\n                                </div>\n                            </div>\n\n                            <div class=\"form-inline fr mt-4 w-100\">\n                                <a href=\"\" class=\"font-weight-bold\" id=\"forget\">Forget Password?</a>\n                            </div>\n\n                            <button type=\"submit\" (click)=\"login(loginForm)\" class=\"btn btn-primary btn-block mt-5\">\n                                <span class=\"fa fa-lock\"></span> Login\n                              </button>\n                               <div class=\"text-center pt-4 text-muted\">Don't have account ? <a routerLink=\"/register\" id=\"sign\">Sign Up</a></div>\n                        </form>\n                    </div>\n\n                  \n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!--yes-->\n<form class=\"form-signin\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" novalidate >\n                              \n    <div class=\"form-group\"  [ngClass]=\"{ 'has-error': isSubmitted && email.errors}\">\n\n      <label for=\"inputEmail\" class=\"sr-only\"></label>\n      <input type=\"email\" id=\"inputEmail\" [formControlName]=\"'email'\" class=\"form-control\" placeholder=\"Entrez votre adresse email\" required=\"\" autofocus=\"\" email>\n      \n      <small *ngIf=\"email.invalid && email.touched && email.touched\" class=\"help-block\">       \n       <div *ngIf=\"email.errors?.required && email.touched\">\n          L'adresse email est obligatoire.\n       </div>\n       <div *ngIf=\"email.errors?.email\">\n        Entrer une email valide.\n        </div>\n       \n    </small>\n\n    </div>\n    <div class=\"form-group\" [ngClass]=\"{ 'has-error': isSubmitted && password.errors}\">\n      <label for=\"inputPassword\" class=\"sr-only\"></label>\n      <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\"\n       class=\"form-control\" placeholder=\"Entre votre mot de passe\" required=\"\" autofocus=\"\" minlength=\"8\" maxlength=\"64\" pattern=\"^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$\">\n\n       <small *ngIf=\"password.invalid && password.touched\" class=\"help-block\">       \n           <div *ngIf=\"password.errors?.required\">\n               Ce champ est obligatoire.\n           </div>\n           <div *ngIf=\"password.errors?.pattern\">\n             \n            Le mot de passe doit contenir des lettres et des chiffres.\n           </div> \n           <div *ngIf=\"password.errors?.minlength\">\n               Le mot de passe doit comporter au moins 8 caractères.\n           </div>\n           \n        </small>\n   </div>\n    <button type=\"submit\">Se Connecter</button>\n    <div class=\"forgot-password\">\n        <a routerLink=\"/\">mot de passe oublié ?</a>\n    </div>\n\n    <p>Vous n'avez pas de compte ? <a routerLink=\"/register\">s'inscrire</a></p>\n<br><br>\n   \n\n      </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}